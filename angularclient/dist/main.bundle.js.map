{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/question-list/question-list.component.css","./src/app/question-list/question-list.component.html","./src/app/question-list/question-list.component.ts","./src/app/question-service.service.ts","./src/app/result-service.service.ts","./src/app/results-page/results-page.component.css","./src/app/results-page/results-page.component.html","./src/app/results-page/results-page.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { QuestionListComponent } from './question-list/question-list.component';\nimport { ResultsPageComponent } from './results-page/results-page.component';\n\nconst routes: Routes = [\n  { path: 'questions', component: QuestionListComponent },\n  { path: 'results', component: ResultsPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card bg-dark my-5\\\">\\n        <div class=\\\"card-body\\\">\\n          <h2 class=\\\"card-title text-center text-white py-3\\\">{{ title }}</h2>\\n          <ul class=\\\"text-center list-inline py-3\\\">\\n            <li class=\\\"list-inline-item\\\">\\n              <a routerLink=\\\"/questions\\\" class=\\\"btn btn-info\\\">List Questions</a>\\n                </li>\\n          </ul>\\n        </div>\\n      </div>\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Trivia Galore';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { QuestionListComponent } from './question-list/question-list.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuestionServiceService } from './question-service.service';\nimport { ResultsPageComponent } from './results-page/results-page.component';\nimport { ResultServiceService } from './result-service.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionListComponent,\n    ResultsPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\tHttpClientModule,\n\tFormsModule, \n  ],\n  \n  // Singleton service declarations\n  providers: [QuestionServiceService, ResultServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question-list/question-list.component.css\n// module id = ./src/app/question-list/question-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card my-5\\\">\\n  <div class=\\\"card-body\\\">\\n  <h3> Please answer the following list of questions: </h3>\\n  <form (ngSubmit)=\\\"onSubmit(qForm.value)\\\" #qForm=\\\"ngForm\\\">\\n    <table class=\\\"table table-bordered table-striped table-fixed\\\">\\n      <thead class=\\\"thead-dark\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">#</th>\\n          <th scope=\\\"col\\\">Question</th>\\n          <th scope=\\\"col\\\">Options</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n\\t  <!-- Generate our list of questions -->\\n        <tr *ngFor=\\\"let question of questions\\\">\\n\\t\\t  <td scope=\\\"col\\\"> {{question.id }} </td>\\n          <td scope=\\\"col\\\"> {{ question.question }}</td>\\n          <td> \\t<select class=\\\"form-select w-100 p-3\\\" name=\\\"{{question.id}}\\\" ngModel> <option *ngFor=\\\"let option of question.options\\\" value=\\\"{{option}}\\\"> {{option}} </option>\\n\\t\\t  </select> </td> \\n        </tr>\\t\\n      </tbody>\\n\\n\\t \\n    </table>\\n\\t<div class=\\\"row justify-content-md-center\\\">\\n\\t\\t\\t        <button type=\\\"submit\\\"\\n        class=\\\"btn btn-info btn-lg\\\">Submit</button>\\n\\t\\t</div>\\n\\t</form>\\n\\n\\n\\t \\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question-list/question-list.component.html\n// module id = ./src/app/question-list/question-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { SimpleQuestion } from '../simple-question';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionServiceService } from '../question-service.service';\nimport { ResultServiceService } from \"../result-service.service\";\n\n@Component({\n  selector: 'app-question-list',\n  templateUrl: './question-list.component.html',\n  styleUrls: ['./question-list.component.css'],\n})\nexport class QuestionListComponent implements OnInit {\n\n  questions: SimpleQuestion[];\n  answers: object;\n\n  constructor(private route: ActivatedRoute, \n      private router: Router, private questionService : QuestionServiceService, public resultService : ResultServiceService) { }\n\n\t  // On initialization, fetch the questions from the backend.\n  ngOnInit() {\n\t  this.questionService.listQuestions().subscribe(data => {\n\t\t  this.questions = data;\n\t  });\n  }\n  \n  /* \n   * When submitting the form, post the answers to the backend and receive back the answers. Transfer all data to the data sharing service and \n   * load the results page.\n   */\n  onSubmit(f) {\n\t  this.questionService.answerQuestion(f).subscribe(result => {\n\t\t  this.answers = result;\n\t\t  \n\t\t  // Parse the Object dictionaries to Map types to ensure correct typing for keys and values and so we can use standard Map functions later\n\t\t  let resultMap = new Map<string, string>();\n\t\t  Object.keys(result).forEach(k => {\n\t\t\t  resultMap.set(k, result[k]);\n\t\t  });\n\t\t  this.sendResults(resultMap);\n\t\t  \n\t\t  let answerMap = new Map<string, string>();\n\t\t  Object.keys(f).forEach(k => {\n\t\t\t  answerMap.set(k, f[k]);\n\t\t  });\n\t\t  this.sendAnswers(answerMap);\n\t\t  \n\t\t  let questionMap = new Map<string, string>();\n\t\t  this.questions.forEach(q => {\n\t\t\t  questionMap.set(q.id.toString(), q.question);\n\t\t  });\n\t\t  this.sendQuestions(questionMap);\n\t\t  \n\t\t  this.router.navigate(['/results']);\t\n\t  })\n  }\n  /*\n   * Methods for sending data to the data sharing service so the result page component can access them.\n   */\n  sendResults(results){\n\t  this.resultService.receiveResults(results);\n  }\n  sendAnswers(answers){\n\t  this.resultService.receiveAnswers(answers);\n  }\n  sendQuestions(questions){\n\t  this.resultService.receiveQuestions(questions);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question-list/question-list.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { SimpleQuestion } from './simple-question';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class QuestionServiceService {\n\n  constructor(private http: HttpClient) { }\n  \n  /*\n   * REST calls to the backend\n   */\n  public listQuestions(): Observable<SimpleQuestion[]> {\n\t  return this.http.get<SimpleQuestion[]>(\"http://localhost:8092/questions?nr=5\");\n  }\n  \n  public answerQuestion(answers: Map<number, string>) {\n\t  return this.http.post<Map<number, string>>(\"http://localhost:8092/checkanswer\", answers);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question-service.service.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject  } from 'rxjs';\n\n/*\n * The data sharing service for sharing data between the question list and result page components.\n * Singleton instance used app-wide.\n */\nexport class ResultServiceService {\n\t\n  // Use behaviorsubjects instead of regular subjects so when polling the receivers the previous result is returned.\n  public questionResultSource = new BehaviorSubject<Map<string, string>>(new Map<string, string>([[\"0\", \"no results\"]])); \n  public answerSource = new BehaviorSubject<Map<string, string>>(new Map<string, string>([[\"0\", \"no answers\"]])); \n  public questionSource = new BehaviorSubject<Map<string, string>>(new Map<string, string>([[\"0\", \"no questions\"]])); \n  \n  resultsReceiver$ = this.questionResultSource.asObservable();\n  answersReceiver$ = this.answerSource.asObservable();\n  questionsReceiver$ = this.questionSource.asObservable();\n  \n  constructor() { }\n  \n  receiveResults(results : Map<string, string> ){\n\t  this.questionResultSource.next(results);\n  }\n  receiveAnswers(answers : Map<string, string> ){\n\t  this.answerSource.next(answers);\n  }\n  receiveQuestions(questions : Map<string, string> ){\n\t  this.questionSource.next(questions);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/result-service.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/results-page/results-page.component.css\n// module id = ./src/app/results-page/results-page.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card my-5\\\">\\n\\n  <div class=\\\"card-body\\\">\\n  <h3> Below you will find the results of your answered questions! Please feel free to try again.</h3>\\n  <table class=\\\"table table-bordered table-striped\\\">\\n  <thead>\\n  <tr>\\n  <td> Question ID </td>\\n  <td> Question </td>\\n  <td> Your Answer </td>\\n  <td> Your Answer Turned Out To Be: </td>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let ans of resultKeys\\\">\\n  <td> {{ans}} </td>\\n  <td> {{questions.get(ans)}} </td>\\n  <td> {{answers.get(ans)}} </td>\\n  <td>  {{results.get(ans)}}</td>\\n  </tr>\\n  </tbody>\\n  </table>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/results-page/results-page.component.html\n// module id = ./src/app/results-page/results-page.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ResultServiceService } from \"../result-service.service\";\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-results-page',\n  templateUrl: './results-page.component.html',\n  styleUrls: ['./results-page.component.css']\n})\nexport class ResultsPageComponent implements OnInit {\n\n  results: Map<string, string>;\n  answers: Map<string, string>;\n  questions: Map<string, string>;\n  resultKeys: string[];\n  \n  // Subscriptions are kept track off so we can unsubscribe on closing.\n  resultsSubscription: Subscription;\n  answersSubscription: Subscription;\n  questionsSubscription: Subscription;\n\n  /* Register all of the data listeners. The results of the question form, the questions themselves and the sent answers\n   * are passed separately. Generates Map objects for the data.\n   */\n  constructor(private route: ActivatedRoute, private router: Router, public resultService : ResultServiceService) { \n      this.resultsSubscription = resultService.resultsReceiver$.subscribe(\n      result => {\n        this.results = result;\n\t\tthis.loadResultKeys();\n    });\n\tthis.answersSubscription = resultService.answersReceiver$.subscribe(\n      result => {\n\t\t  this.answers = result;\n\t\tconsole.log(this.answers);\n\n    });\n\tthis.questionsSubscription = resultService.questionsReceiver$.subscribe(\n      result => {\n        this.questions = result;\n\t\tconsole.log(this.questions);\n\n    });}\n\n\tloadResultKeys(){\n\t\tthis.resultKeys = Array.from(this.results.keys());\n\t}\n\n  \n  ngOnInit() {\n\t  \n  }\n  \n  // Unsubscribe to prevent memory leaks.\n  ngOnDestroy() {\n        this.resultsSubscription.unsubscribe();\n\t\tthis.answersSubscription.unsubscribe();\n\t\tthis.questionsSubscription.unsubscribe();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/results-page/results-page.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}